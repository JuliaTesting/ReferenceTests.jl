name: Unit test

on:
  create:
    tags:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - '1.6'  # lowest supported julia version declared in `Project.toml`
          - '1'  # latest release
          - 'nightly'
        os: [ubuntu-latest]
        arch: [x64]
        include:
          - os: windows-latest
            julia-version: '1'
            arch: x64
          - os: macOS-latest
            julia-version: '1'
            arch: x64
    env:
        REFERENCE_TESTS_STAGING_PATH: "~/mismatches/"
    steps:
      - uses: actions/checkout@v3
      - name: "Set up Julia"
        uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
      - uses: julia-actions/cache@v1
      # rerun the test twice to (1) make sure regeneration works (2) generated references match what's uploaded
      - name: "Unit Test"
        shell: bash
        run: |
          julia --color=yes --check-bounds=yes --project -e "using Pkg; Pkg.test(coverage=true)"
          rm -rf test/references
          export JULIA_REFERENCETESTS_UPDATE=true
          julia --color=yes --check-bounds=yes --project -e "using Pkg; Pkg.test(coverage=true)"
          export JULIA_REFERENCETESTS_UPDATE=false
          julia --color=yes --check-bounds=yes --project -e "using Pkg; Pkg.test(coverage=true)"
      - name: Upload Mismatched Files as a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "Mismatched Files"
          path: "~/mismatches/"
      
      - uses: julia-actions/julia-processcoverage@latest
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info
